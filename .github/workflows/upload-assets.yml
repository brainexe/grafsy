name: Upload Packages to new release

on:
  release:
    types:
      - published

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      deb: ${{ steps.build.outputs.deb }}
      rpm: ${{ steps.build.outputs.rpm }}
      sha256sum: ${{ steps.build.outputs.sha256sum }}
      md5sum: ${{ steps.build.outputs.md5sum }}

    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ^1

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          # Otherwise there's a risk to not get latest tag
          # We hope, that the current commit at
          # least 50 commits close to the latest release
          fetch-depth: 50

      - name: Install dependencies
        run: |
          sudo apt-get install -y libacl1-dev
          go install github.com/goreleaser/nfpm/v2/cmd/nfpm@v2.40.0

      - name: Build packages
        id: build
        run: |
          # Checkout action doesn't fetch tags
          git fetch --tags
          make packages
          make github_artifact
      - name: Upload rpm
        id: upload-rpm
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ASSET: ${{ steps.build.outputs.rpm }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifact/${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
      - name: Upload sha256sum
        id: upload-sha256sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ASSET: ${{ steps.build.outputs.sha256sum }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifact/${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
      - name: Upload md5sum
        id: upload-md5sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ASSET: ${{ steps.build.outputs.md5sum }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifact/${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
      - name: Upload deb
        id: upload-deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ASSET: ${{ steps.build.outputs.deb }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: artifact/${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
