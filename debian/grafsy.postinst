#!/bin/sh

# Abort if any command returns an error value
set -e

# TODO: implement config reading for grafsy parameters and create the proper tree
USER=grafsy
CONF=/etc/grafsy/grafsy.toml

case "$1" in
  configure)
    # Configure this package.  If the package must prompt the user for
    # information, do it here.
    if ! getent group "${USER}" > /dev/null 2>&1 ; then
      addgroup --system "${USER}" --quiet
    fi
    if ! id "${USER}" > /dev/null 2>&1 ; then
      adduser --system --home /dev/null --no-create-home \
        --ingroup "${USER}" --disabled-password --shell /bin/false \
        "${USER}"
    fi

    if [ ! -e "${CONF}" ]; then
      echo "For use this software you have to create ${CONF} file. You could use /etc/grafsy/example/grafsy.toml as default"
    else
      # TODO: after grafsy will could echo paramaters from config - take care about creation of necessary directories for logs
      systemctl enable grafsy.service
      systemctl daemon-reload
      systemctl restart grafsy.service
    fi
    ;;
  abort-upgrade)
    # Back out of an attempt to upgrade this package FROM THIS VERSION
    # to version $2.  Undo the effects of "prerm upgrade $2".
    :

    ;;
  abort-remove)
    # Back out of an attempt to remove this package, which was due to
    # a conflict with package $3 (version $4).  Undo the effects of
    # "prerm remove in-favour $3 $4".
    :

    ;;
  abort-deconfigure)
    # Back out of an attempt to deconfigure this package, which was
    # due to package $6 (version $7) which we depend on being removed
    # to make way for package $3 (version $4).  Undo the effects of
    # "prerm deconfigure in-favour $3 $4 removing $6 $7".
    :

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac

#DEBHELPER#
